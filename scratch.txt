
	/*
		abandoning this for the moment - it requires you to refer to methods as variables.method() inside of the monkeypatched object, which isnt ideal.  Not sure if there is a better way or not

		function makeEmitter (required target) {
			//check to make sure that the target doesnt already have any of the functions we want to add
			var functionsToAdd = ["_ensurePrivateVariables","addEventListener","on","once","removeListener","removeAllListeners","setMaxListeners","getMaxListeners","listeners","emit","dispatch","dispatchError"];

			var f = {};

			for (f in getMetadata(target).functions) {
				if (arrayFindNoCase(functionsToAdd, f.name)) {
					throw(type="Emit.duplicateFunctionDefinition", message="Error making target an event Emitter, target already defines method: " & f.name);
				}
			}

			//monkeypatch
			//cant make ensurePrivateVariables private unfortunately
			for (f in functionsToAdd) {
				target[f] = variables[f];
			}

			return target;
		}
	*/